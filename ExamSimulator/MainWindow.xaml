<Window x:Class="ExamSimulator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExamSimulator" Loaded="Page_Loaded"
        xmlns:i="clr-namespace:ExamSimulator"
        mc:Ignorable="d" MouseDown="Windows_MouseDown"
        Title="MainWindow" Height="455" Width="725" 
        WindowStyle="None" ResizeMode="NoResize" 
        WindowStartupLocation="CenterScreen"  
        AllowsTransparency="True" BorderBrush="#A5BBC8" BorderThickness="6">
    <Window.Resources>
        <Style x:Key="WindowIconStyle" TargetType="{x:Type Button}">
            <Setter Property="FontFamily" Value="Webdings" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
            <Setter Property="Cursor" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RedGlowItemContainer" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border  x:Name="IconBorder"  Margin="8,4,8,4" >
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="IconBorder" Property="BitmapEffect">
                                    <Setter.Value>
                                        <OuterGlowBitmapEffect GlowColor="Red" GlowSize="5" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LinkButton" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock>
                    <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="Black" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <DataTrigger Binding ="{Binding ElementName=btnExamCode, Path=IsEnabled}" Value="true">
                    <Setter Property="Foreground" Value="Blue" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="#ffffff"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#333333"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <i:TreeViewLineConverter x:Key="LineConverter"/>

        <!-- Toggle Button -->
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid Width="15" Height="13" SnapsToDevicePixels="True">
                            <Rectangle Width="9" Height="9" Stroke="#919191" SnapsToDevicePixels="true">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                        <GradientStop Color="White" Offset="0"/>
                                        <GradientStop Color="Silver" Offset="0.5"/>
                                        <GradientStop Color="LightGray" Offset="1"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="ExpandPath" Width="1" Height="5" Stroke="Black" SnapsToDevicePixels="true"/>
                            <Rectangle Width="5" Height="1" Stroke="Black" SnapsToDevicePixels="true"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility"  TargetName="ExpandPath" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TreeViewItem -->
        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <!-- Connecting Lines -->
                            <Rectangle x:Name="HorLn" Margin="9,1,0,0" Height="1" Stroke="#DCDCDC" SnapsToDevicePixels="True"/>
                            <Rectangle x:Name="VerLn" Width="1" Stroke="#DCDCDC" Margin="0,0,1,0" Grid.RowSpan="2" SnapsToDevicePixels="true" Fill="White"/>
                            <ToggleButton Margin="-1,0,0,0" x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" MinWidth="20"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <!-- This trigger changes the connecting lines if the item is the last in the list -->
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Converter={StaticResource LineConverter}}" Value="true">
                                <Setter TargetName="VerLn" Property="Height" Value="9"/>
                                <Setter TargetName="VerLn" Property="VerticalAlignment" Value="Top"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="Green"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel LastChildFill="True">
        <Border Height="70" Background="#3B6688" DockPanel.Dock="Top">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4*"></ColumnDefinition>
                    <ColumnDefinition Width="5*"></ColumnDefinition>
                    <ColumnDefinition Width="1*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label x:Name="label" Grid.Row="0" Grid.Column="0" Content="Xexam Simulator" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" FontSize="30" Margin="0 10"/>

                <Rectangle  HorizontalAlignment="Stretch" Height="35" VerticalAlignment="Top" Grid.Column="2"/>
                <Button Style="{StaticResource WindowIconStyle}" x:Name="Btnclose" Content="r" Grid.Row="0" Grid.Column="2" Click="TriggerClose"/>
                <Button Style="{StaticResource WindowIconStyle}" x:Name="Btnmin" Content="0" Margin="0,0,25,0"  Grid.Row="0" Grid.Column="2" Click="TriggerMinimize"/>
            </Grid>
        </Border>
        <Border Height="30"  DockPanel.Dock="Top">
            <Label Name="lblheading" Content="Member Center" FontSize="15" FontWeight="Bold"></Label>
        </Border>
        <Border Height="50" Background="#0C4068" DockPanel.Dock="Bottom">
            <Grid>
                <ProgressBar Name="pbDownloadStatus" Height="30" Width="300" Background="#0C4068" BorderBrush="#0C4068" Minimum="0" Maximum="100"/>
                <TextBlock Name="txtblkProgressValue" Text="{Binding ElementName=pbDownloadStatus, Path=Value, StringFormat={}{0:0}%}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Visibility="Collapsed" />
            </Grid>
        </Border>
        <Border Background="White">
            <!--<Grid>
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>-->
            <!--<ListBox Grid.Row="0" x:Name="listFile" ItemsSource="{Binding _userExamlist}" Width="auto" FontSize="14" ScrollViewer.VerticalScrollBarVisibility="Visible"  ItemContainerStyle="{StaticResource RedGlowItemContainer}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <Label x:Name="lblExam1"  Content="{Binding SecondCategory}" />
                                <ListBox  x:Name="list" ItemsSource="{Binding ExamCodeList}" Width="auto" BorderThickness="0"  ItemContainerStyle="{StaticResource RedGlowItemContainer}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button x:Name="btnDownload" Content="Download" CommandParameter="{Binding ExamCodeId}" Click="btnDownload_Click" Style="{StaticResource BaseButtonStyle}"/>
                                                <Label Content=" - "  />
                                                <Button x:Name="btnExamCode" Content="{Binding ExamCode}" IsEnabled="{Binding IsActive}" CommandParameter="{Binding Path}" Tag="{Binding Title}" ToolTip="{Binding Examtime}" Style="{StaticResource LinkButton}" Click="btnExamCode_Click"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>-->
            <ListBox Name="treeview" Grid.Row="1" ItemsSource="{Binding _userExamlist}" Width="auto" FontSize="14" ScrollViewer.VerticalScrollBarVisibility="Visible"  ItemContainerStyle="{StaticResource RedGlowItemContainer}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TreeViewItem Header="{Binding SecondCategory}">
                                <ListBox  ItemsSource="{Binding ExamCodeList}" Width="auto" BorderThickness="0"  ItemContainerStyle="{StaticResource RedGlowItemContainer}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button x:Name="btnDownload" Content="Download" CommandParameter="{Binding ExamCodeId}" Click="btnDownload_Click" Style="{StaticResource BaseButtonStyle}"/>
                                                <Label Content=" - "  />
                                                <Button x:Name="btnExamCode" Margin="0 5 0 0" Content="{Binding ExamCode}" IsEnabled="{Binding IsActive}" CommandParameter="{Binding Path}" Tag="{Binding Title}" ToolTip="{Binding Examtime}" Style="{StaticResource LinkButton}" Click="btnExamCode_Click"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </TreeViewItem>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
                <!--<TreeViewItem Header="Program Files">
                        <TreeViewItem Header="Header"/>
                    </TreeViewItem>-->
                <!--<TreeViewItem Header="Program Data" IsExpanded="True">
                        <TreeViewItem Header="Microsoft">
                            <TreeViewItem Header="Header"/>
                        </TreeViewItem>
                        <TreeViewItem Header="Microsoft Help"/>
                    </TreeViewItem>
                    <TreeViewItem Header="Uers" IsExpanded="True">
                        <TreeViewItem Header="Default"/>
                        <TreeViewItem Header="Public" IsExpanded="True">
                            <TreeViewItem Header="Libraries"/>
                            <TreeViewItem Header="Public Desktop"/>
                            <TreeViewItem Header="Public Documents"/>
                        </TreeViewItem>
                        <TreeViewItem Header="TUYEN">
                            <TreeViewItem Header="Header"/>
                        </TreeViewItem>
                    </TreeViewItem>-->
            </ListBox>
            <!--</Grid>-->
        </Border>
    </DockPanel>
</Window>
