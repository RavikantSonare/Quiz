<Page x:Class="ExamSimulator.ExamRun"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ExamSimulator"
      mc:Ignorable="d" Loaded="Page_Loaded"
      d:DesignHeight="300" d:DesignWidth="300" 
      Title="ExamRun">
    <Page.Resources>
        <Style x:Key="wpfStyle1" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <Style x:Key="wpfStyle2" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="15,10,0,0"/>
            <Style.Triggers>
                <DataTrigger  Binding ="{Binding ElementName=list, Path=IsEnabled}"  Value="True">
                    <Setter Property="TextBlock.Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="btnexhibit" TargetType="{x:Type Button}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Content" Value="Exhibit"/>
            <Style.Triggers>
                <DataTrigger Binding ="{Binding ElementName=btnExhibit, Path=Tag}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding ="{Binding ElementName=btnExhibit, Path=Tag}" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <!--<DataTrigger  Binding ="{Binding ElementName=btnExhibit, Path=Tag}"  Value="Refer to the exhibit">
                    <Setter Property="CheckBox.Visibility" Value="Visible"/>
                    <Setter Property="Content" Value="Exhibit"/>
                </DataTrigger>-->
                <DataTrigger  Binding ="{Binding ElementName=btnExhibit, Path=Tag}"  Value="Refer to the topology">
                    <Setter Property="CheckBox.Visibility" Value="Visible"/>
                    <Setter Property="Content" Value="Topology"/>
                </DataTrigger>
                <DataTrigger  Binding ="{Binding ElementName=btnExhibit, Path=Tag}"  Value="Refer to the Scenario">
                    <Setter Property="CheckBox.Visibility" Value="Visible"/>
                    <Setter Property="Content" Value="Scenario"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="btnTopology" TargetType="{x:Type Button}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Content" Value="Topology"/>
            <Style.Triggers>
                <DataTrigger Binding ="{Binding ElementName=btnTopology, Path=Tag}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding ="{Binding ElementName=btnTopology, Path=Tag}" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="btnScenario" TargetType="{x:Type Button}">
            <Setter Property="Visibility" Value="Visible" />
            <Setter Property="Content" Value="Scenario"/>
            <Style.Triggers>
                <DataTrigger Binding ="{Binding ElementName=btnScenario, Path=Tag}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
                <DataTrigger Binding ="{Binding ElementName=btnScenario, Path=Tag}" Value="">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="RedGlowItemContainer" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border  x:Name="IconBorder"  Margin="8,4,8,4" >
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="IconBorder" Property="BitmapEffect">
                                    <Setter.Value>
                                        <OuterGlowBitmapEffect GlowColor="Red" GlowSize="5" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <VisualBrush x:Key="HatchBrushnew" TileMode="Tile" Viewport="0,0,5,30" ViewportUnits="Absolute" Viewbox="0,0,30,30" ViewboxUnits="Absolute">
            <VisualBrush.Transform>
                <RotateTransform Angle="135" CenterX=".5" CenterY=".5" />
            </VisualBrush.Transform>
            <VisualBrush.Visual>
                <Canvas>
                    <Path  Stroke="Black" StrokeThickness="1" >
                        <Path.Data>
                            <LineGeometry StartPoint="15,0" EndPoint="15,30" />
                        </Path.Data>
                    </Path>
                </Canvas>
            </VisualBrush.Visual>
        </VisualBrush>
        <Style x:Key="bottomborder"  TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource HatchBrushnew}"/>
        </Style>

        <Style x:Key="rbtnanswer" TargetType="{x:Type RadioButton}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Width="25" Height="25"
                              MinHeight="20" MinWidth="20">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="3*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="3*" />
                                        <RowDefinition Height="1*" />
                                    </Grid.RowDefinitions>
                                    <Ellipse Name="EllipseMain"  Width="15" Height="15"
                                     Grid.Column="0" Grid.ColumnSpan="3"
                                     Grid.Row="0" Grid.RowSpan="3"
                                     Fill="Transparent"
                                     StrokeThickness="{TemplateBinding BorderThickness}"
                                     Stroke="DimGray" />
                                    <Ellipse Name="CheckMark" Width="11" Height="11"
                                     Grid.Column="1"
                                     Grid.Row="1"
                                     Opacity="0"
                                     Fill="#029cc7"  />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                                        To="LightGray" Duration="0:0:0.3" />
                                            <ColorAnimation Storyboard.TargetName="EllipseMain" Storyboard.TargetProperty="(Ellipse.Stroke).(SolidColorBrush.Color)"
                                                        To="LightGray" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity"
                                                        To="1" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity"
                                                        To="0" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate" >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="Opacity"
                                                        To="1" Duration="0:0:0.3" />
                                            <ColorAnimation Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(Ellipse.Fill).(SolidColorBrush.Color)"
                                                        To="Gray" Duration="0:0:0.3" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,0,0"
                        HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                        RecognizesAccessKey="True" />
                        </BulletDecorator>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger  Binding ="{Binding ElementName=txtQuestion, Path=Tag}"  Value="1">
                    <Setter Property="RadioButton.Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger  Binding ="{Binding ElementName=txtQuestion, Path=Tag}"  Value="3">
                    <Setter Property="RadioButton.Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger  Binding ="{Binding ElementName=txtQuestion, Path=Tag}"  Value="6">
                    <Setter Property="RadioButton.Visibility" Value="Visible"/>
                </DataTrigger>
                <!--<DataTrigger  Binding ="{Binding ElementName=txtUserAnswer, Path=Text}"  Value="True">
                    <Setter Property="RadioButton.IsChecked" Value="True"/>
                </DataTrigger>-->
            </Style.Triggers>
        </Style>

        <Style x:Key="chkanswer" TargetType="{x:Type CheckBox}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <BulletDecorator>
                            <BulletDecorator.Bullet>
                                <Grid Height="25" Width="25"
                              MinHeight="25" MinWidth="25" ShowGridLines="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="4*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="2*" />
                                        <ColumnDefinition Width="2*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="3*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="4*" />
                                    </Grid.RowDefinitions>

                                    <Border Name="MainBorder" Grid.ColumnSpan="9" Grid.RowSpan="9" CornerRadius="4" 
                                            BorderThickness="1" Background="Transparent" />
                                    <Border Name="InnerBorder" Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" Grid.RowSpan="5" 
                                            BorderThickness="1" BorderBrush="#808080" />

                                    <Path Name="InnerPath" Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75" Stretch="Fill" Stroke="#808080"/>

                                    <Path Name="CheckMark" Grid.Column="2" Grid.ColumnSpan="5" Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0" Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Fill="#3babe3" Stretch="Fill" Stroke="#3babe3" />

                                    <Path Name="InderminateMark" Grid.Column="3" Grid.Row="4" Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0" Stretch="Fill" StrokeThickness="0" Fill="#808080" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" >
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        RecognizesAccessKey="True" />
                        </BulletDecorator>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="#81d2eb" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                                <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger  Binding ="{Binding ElementName=txtQuestion, Path=Tag}"  Value="2">
                    <Setter Property="CheckBox.Visibility" Value="Visible"/>
                </DataTrigger>
                <!--<DataTrigger  Binding ="{Binding ElementName=txtUserAnswer, Path=Text}"  Value="True">
                    <Setter Property="CheckBox.IsChecked" Value="True"/>
                </DataTrigger>-->
            </Style.Triggers>
        </Style>

        <Style x:Key="griddragdrop" TargetType="{x:Type Grid}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger  Binding ="{Binding ElementName=txtQuestion, Path=Tag}"  Value="4">
                    <Setter Property="CheckBox.Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="canvasHotspot" TargetType="{x:Type Canvas}">
            <Setter Property="Visibility" Value="Collapsed" />
            <Style.Triggers>
                <DataTrigger  Binding ="{Binding ElementName=txtQuestion, Path=Tag}"  Value="5">
                    <Setter Property="CheckBox.Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Pathcanvas" TargetType="{x:Type Path}">
            <Setter Property="Path.Fill" Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Path.Fill" Value="Gray" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Path.Fill" Value="Transparent" />
                </Trigger>
                <DataTrigger  Binding ="{Binding ElementName=txtUserAnswerPath, Path=Text}"  Value="True">
                    <Setter Property="Path.Fill" Value="Gray" />
                    <Setter Property="Path.StrokeThickness" Value="3" />
                    <Setter Property="Path.Opacity" Value=".35" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="btnCorrectAnswerDisplay" TargetType="{x:Type Button}">
            <Setter Property="Button.Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding ="{Binding ElementName=chkMark, Path=Tag}"  Value="SM">
                    <Setter Property="Button.Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="16,3,16,3"/>
            <Setter Property="Margin" Value="10,10,10,10"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>

    </Page.Resources>
    <DockPanel LastChildFill="True">
        <Border Height="55" DockPanel.Dock="Bottom" Style="{StaticResource bottomborder}">
            <Grid>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Row="0" Grid.Column="0">
                        <Button x:Name="btnPrevious" Style="{StaticResource BaseButtonStyle}" Background="#0769B4" Click="btnPrevious_Click" Content="Previous"/>
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="1">
                        <Button x:Name="btnNext" Style="{StaticResource BaseButtonStyle}" Background="#0769B4" Click="btnNext_Click" Content="Next"/>
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="3">
                        <Button x:Name="btnCorrectAnswer" Style="{StaticResource BaseButtonStyle}" Content="Correct Answer" Background="#1C3347" Click="btnCorrectAnswer_Click" Visibility="Collapsed"/>
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="4">
                        <Button x:Name="btnReviewMarkExam" Style="{StaticResource BaseButtonStyle}" Content="Review Marked" Background="#1C3347" Click="btnReviewMarkExam_Click"/>
                    </StackPanel>
                    <StackPanel Grid.Row="0" Grid.Column="5">
                        <Button x:Name="btnEndExam" Style="{StaticResource BaseButtonStyle}" Content="End Exam" Background="#1C3347" Click="btnEndExam_Click"/>
                    </StackPanel>
                </Grid>
            </Grid>
        </Border>
        <Border Background="White">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0">
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                            <ColumnDefinition Width="1*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right">
                            <ListBox  x:Name="listQuestionMark" ItemsSource="{Binding QuestionList}" Width="auto" BorderThickness="0" ItemContainerStyle="{StaticResource RedGlowItemContainer}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel>
                                            <CheckBox x:Name="chkMark" IsChecked="{Binding Mark}" Content="Mark" TabIndex="{Binding QAId}" Click="checkMark_click" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Left">
                            <Label  Content="Question" FontSize="15" FontWeight="Bold"/>
                            <Border BorderThickness="1" BorderBrush="Gray" CornerRadius="4" Height="30">
                                <Label x:Name="lblQuestionNo"   FontSize="15" />
                            </Border>
                            <Label  Content="of"  FontSize="15" />
                            <Label x:Name="lblQuestionOutof"  FontSize="15"/>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
                            <Button x:Name="btnPauseTimer" Content="Pause" Margin="0,0,7,8" Padding="4,2,4,2" Height="25" Background="#0769B4" Foreground="White" FontSize="13" Click="btnPauseTimer_Click"/>
                            <Image VerticalAlignment="Top" Name="imgtimer">
                                <Image.Source>
                                    <BitmapImage UriSource="Resources\stopwatch.png" />
                                </Image.Source>
                            </Image>
                            <Label x:Name="lblTimer" HorizontalAlignment="Center" VerticalAlignment="Top" FontSize="14" />
                        </StackPanel>
                    </Grid>
                </StackPanel>
                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Visible" HorizontalScrollBarVisibility="Auto">
                    <ListBox  x:Name="listQuestion" ItemsSource="{Binding QuestionList}" ItemContainerStyle="{StaticResource RedGlowItemContainer}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock  Name="txtQuestion" Text="{Binding Question}" Tag="{Binding QuestionTypeId}" Style="{StaticResource wpfStyle1}" Width="1000"/>
                                    <RichTextBox local:HtmlRichTextBoxBehavior.Text="" Width="700" BorderThickness="0" BorderBrush="Transparent" Visibility="Collapsed"/>
                                    <!--{Binding ElementName=txtQuestion, Path=Text}-->
                                    <Grid Width="300">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                            <ColumnDefinition></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="0" Name="btnExhibit" HorizontalAlignment="Center" CommandParameter="{Binding Exhibit}"  Tag="{Binding Exhibit}" Style="{StaticResource btnexhibit}" Background="#1C3347" Foreground="White" Height="25" Margin="10,7,10,0" FontSize="15" Click="btnExhibit_Click"/>
                                        <Button Grid.Column="1" Name="btnTopology" HorizontalAlignment="Center" CommandParameter="{Binding Topology}"  Tag="{Binding Topology}" Style="{StaticResource btnTopology}" Background="#1C3347" Foreground="White" Height="25" Margin="10,7,10,0" FontSize="15" Click="btnTopology_Click"/>
                                        <Button Grid.Column="2" Name="btnScenario" HorizontalAlignment="Center" CommandParameter="{Binding Scenario}"  Tag="{Binding Scenario}" Style="{StaticResource btnScenario}" Background="#1C3347" Foreground="White" Height="25" Margin="10,7,10,0" FontSize="15" Click="btnScenario_Click"/>
                                    </Grid>
                                    <ListBox  x:Name="list" ItemsSource="{Binding AnswerList}" Width="auto" BorderThickness="0"  ItemContainerStyle="{StaticResource RedGlowItemContainer}"><!--IsEnabled="{Binding ExamMode}"-->
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <StackPanel>
                                                    <TextBox Name="txtUserAnswer" Text="{Binding UserAnswer}" Visibility="Collapsed" />
                                                    <RadioButton x:Name="rbtnanswer" Style="{StaticResource rbtnanswer}" Tag="{Binding Answer}" TabIndex="{Binding QuestionId}"  GroupName="Answer" Click="RadioButton_Checked">
                                                        <RadioButton.Content>
                                                            <ContentPresenter Content="{Binding Answer}"/>
                                                        </RadioButton.Content>
                                                    </RadioButton>
                                                    <CheckBox x:Name="chkanswer" Style="{StaticResource chkanswer}" Tag="{Binding Answer}" TabIndex="{Binding QuestionId}" Click="Checkbox_checked" >
                                                        <CheckBox.Content>
                                                            <ContentPresenter Content="{Binding Answer}"/>
                                                        </CheckBox.Content>
                                                    </CheckBox>
                                                </StackPanel>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Name="gridDragDrop" Style="{StaticResource griddragdrop}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                            <ColumnDefinition Width="1*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <ListBox ItemsSource="{Binding AnswerList}" Grid.Row="0" Grid.Column="0" x:Name="lbDrag" Drop="lbDrag_Drop" AllowDrop="True" PreviewMouseLeftButtonDown="ListBox_PreviewMouseLeftButtonDown" IsEnabled="{Binding ExamMode}">
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="Height" Value="30" />
                                                    <Setter Property="BorderThickness" Value="1" />
                                                    <Setter Property="BorderBrush" Value="Gray" />
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Label Name="lblAnswer" Content="{Binding Answer}" >
                                                        <Label.Style>
                                                            <Style TargetType="{x:Type Label}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding ="{Binding Path=UserAnswer}" Value="True">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Label.Style>
                                                    </Label>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                        <ListBox ItemsSource="{Binding AnswerList}" Grid.Row="1" Grid.Column="1" x:Name="lbDrop" Drop="lbDrop_Drop" AllowDrop="True" PreviewMouseLeftButtonDown="ListBox_PreviewMouseLeftButtonDown" IsEnabled="{Binding ExamMode}">
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding ="{Binding Path=UserAnswer}" Value="True">
                                                            <Setter Property="Height" Value="30" />
                                                            <Setter Property="BorderThickness" Value="1" />
                                                            <Setter Property="BorderBrush" Value="Gray" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Label Name="lblAnswer" Content="{Binding Answer}">
                                                        <Label.Style>
                                                            <Style TargetType="{x:Type Label}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding ="{Binding Path=UserAnswer}" Value="False">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Label.Style>
                                                    </Label>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Grid>
                                    <Canvas Style="{StaticResource canvasHotspot}" Height="{Binding ActualHeight, ElementName=canvas_image}">
                                        <Image Source="{Binding Resource}" Name="canvas_image" />
                                        <ItemsControl ItemsSource="{Binding AnswerList}" IsEnabled="{Binding ExamMode}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <Canvas Name="hotspot" IsItemsHost="True"/>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid >
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <TextBox Name="txtUserAnswerPath" Text="{Binding UserAnswer}" Visibility="Collapsed" />
                                                        <Path Name="pathcanvas" Style="{StaticResource Pathcanvas}" Stroke="Goldenrod" StrokeThickness="2" Cursor="Hand" Tag="{Binding Answer}" ToolTip="{Binding QuestionId}"  MouseLeftButtonUp="Rectangle_MouseLeftButtonup">
                                                            <Path.Data>
                                                                <GeometryGroup>
                                                                    <RectangleGeometry Rect="{Binding Answer}"/>
                                                                </GeometryGroup>
                                                            </Path.Data>
                                                        </Path>
                                                    </Grid>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </Canvas>
                                    <TextBlock  Text="{Binding Explanation}" Style="{StaticResource wpfStyle2}" Visibility="Collapsed"/>
                                    <Border Name="brdrCorrectAnswer" BorderBrush="Black" BorderThickness="1" Margin="0,10,0,0" Visibility="Collapsed">
                                        <StackPanel>
                                            <TextBlock Name="txtRightAnswerString" Text="{Binding RightAnswer}" Style="{StaticResource wpfStyle2}" Visibility="Collapsed"/>
                                            <TextBlock Name="txtExplanation" Text="{Binding Explanation, StringFormat=Explanation : {0}}" Style="{StaticResource wpfStyle2}"/>
                                        </StackPanel>
                                    </Border>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </ScrollViewer>
            </Grid>
        </Border>
    </DockPanel>
</Page>
